---
global:
  rbacEnable: false
deployKubeScheduler: false
deployKubeControllerManager: false
prometheus:
  service:
    type: NodePort
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      kubernetes.io/tls-acme: "true"
  additionalScrapeConfigs:
    - job_name: "monitoring/kubernetes-pods"
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          separator: ;
          regex: ([^:]+)(?::\d+)?;(\d+)
          target_label: __address__
          replacement: $1:$2
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
grafana:
  # retrieve password using:
  # kubectl get secret --namespace monitoring kube-prometheus-grafana -o jsonpath="{.data.password}" | base64 --decode ; echo
  adminUser: "saucelabs-admin"
  adminPassword: ""

  keepOriginalDatasources: false
  service:
    type: NodePort
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      kubernetes.io/tls-acme: "true"
  dataSource:
    prometheus-datasource.json: |-
      {
        "access": "proxy",
        "basicAuth": false,
        "name": "prometheus",
        "type": "prometheus",
        "url": "http://kube-prometheus:9090"
      }
exporter-kubelets:
  https: false
